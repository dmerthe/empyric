# Example showing how to set up a Server routine
# Otherwise, works the same as the Henon Map Experiment example

Description:
 name: Henon Map Experiment with Server
 operator: Marie
 platform: Bench 1
 comments: A few neutrons never hurt anyone

Settings:
 step interval: 0.5
 plot interval: 5
 save interval: 10
 end: 300

Instruments:
 Henon Mapper:
  type: HenonMapper
  address: 1
  presets:
   a: 0
   b: 0
  postsets:
   a: 0
   b: 0

Variables:
 Knob a:
  instrument: Henon Mapper
  knob: a
 Knob b:
  instrument: Henon Mapper
  knob: b
 Coordinate x:
  instrument: Henon Mapper
  meter: x
 Coordinate y:
  instrument: Henon Mapper
  meter: y
 Distance r:
  expression: 'sqrt(x^2 + y^2)'
  definitions:
   x: Coordinate x
   y: Coordinate y

Alarms:
 r > 1:
  condition: 'r > 1'
  definitions:
   r: Distance r
  protocol: hold

Plots:
 Henon Map:
  x: Coordinate x
  y: Coordinate y
  xlabel: 'X'
  ylabel: 'Y'
  style: parametric
  configure:
   linestyle: None
   marker: 'o'
   markersize: 3

 Y Plot:
  x: Time
  y: Coordinate y

Routines:
 Ramp Knob a:
  type: Timecourse
  knobs: Knob a
  times: [3, 5]
  values: [0.0, 1.4]
 Ramp Knob b:
  type: Timecourse
  knobs: Knob b
  times: [3, 5]
  values: [0.0, 0.3]
 Server:
  type: ModbusServer
  address: 127.0.0.1  # this is the default localhost IP address, but can be set to any IP address assigned by a network to the host computer (clients must be on the same network)
  port: 6174  # the default port for modbus communication is 502, but any other valid port can be used
  knobs:
  # variables can be specified by a list
   - Knob a  # stored in registers 0 to 4
   - Knob b  # stored in registers 5 to 9
  meters:
  # ... or by a dictionary that maps variables to specific starting registers
   0: Coordinate x  # stored in registers 0 to 4
   100: Coordinate y  # stored in registers 100 to 104
   200: Distance r  # stored in registers 200 to 204
