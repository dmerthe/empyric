map:

  Description: {required: true, map: {
    name: {type: str, required: true},
    operator: {type: str},
    platform: {type: str},
    comments: {type: str}
  }}

  Settings: {map: {
    follow-up: {type: str},
    step interval: {type: any},
    save interval: {type: any},
    plot interval: {type: any},
    end: {type: any}
  }}

  Instruments: {map: {
    regex;(.+): {required: true, map: {  # instrument name
      type: {type: str, required: true},
      address: {type: any, required: true},
      presets: {map: {
        regex;(.+): {type: any}  # knob name and value
      }},
      postsets: {map: {
        regex;(.+): {type: any}  # knob name and value
      }},
      regex;(.+): {type: any}
    }}
  }}

  Variables: {required: true, map: {
    regex;(.+): {required: true, map: {  # variable name
      instrument: {type: str},  # for knob and meter type variables
      knob: {type: str},  # for knob type variables
      meter: {type: str},  # for meter type variables
      parameter: {type: any},  # for parameter type variables
      expression: {type: str},  # for expression type variables
      definitions: {map: {  # for expression type variables
        regex;(.+): {type: any}  # references to other variables
      }},
      remote: {type: str},
      alias: {type: str}
    }}
  }}

  Alarms: {map: {
    regex;(.+): {required: true, map: {  # alarm name
      protocol: {type: str},
      condition: {type: str, required: true},
      definitions: {map: {
        regex;(.+): {type: str, required: true}
      }}
    }}
  }}

  Routines: {map: {
    regex;(.+): {required: true, map: {  # routine name
      type: {type: str, required: true},
      times: {type: any},
      knobs: {type: any},
      values: {type: any},
      meters: {type: any},
      end: {type: any}
    }}
  }}

  Plots: {map: {
    regex;(.+): {required: true, map: {  # plot name
      regex;(x\d*): {type: any},
      regex;(y\d*): {type: any},
      s: {type: any},  # for parametric plots
      style: {type: str},
      regex;(x\d*label): {type:  str},
      regex;(y\d*label): {type: str},
      configure: {map: {
        regex;(.+): {type: any}  # keyword args passed to matplotlib
      }}
    }}
  }}
